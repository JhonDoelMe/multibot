# src/modules/settings/keyboard.py

from typing import Optional
from datetime import time as dt_time # –î–ª—è –∞–Ω–æ—Ç–∞—Ü—ñ—ó —Ç–∏–ø—ñ–≤ —á–∞—Å—É

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

# –Ü–º–ø–æ—Ä—Ç—É—î–º–æ ServiceChoice –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≤ –¥–∞–Ω–∏—Ö –∫–æ–ª–±–µ–∫–∞
from src.db.models import ServiceChoice 

SETTINGS_PREFIX = "settings"

# –ö–æ–ª–±–µ–∫–∏ –¥–ª—è –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å
CB_SETTINGS_WEATHER = f"{SETTINGS_PREFIX}:select_weather"
CB_SETTINGS_ALERTS = f"{SETTINGS_PREFIX}:select_alerts"
CB_SETTINGS_BACK_TO_MAIN_MENU = f"{SETTINGS_PREFIX}:back_main_menu"

# –ù–æ–≤—ñ –∫–æ–ª–±–µ–∫–∏ –¥–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å –ø—Ä–æ –ø–æ–≥–æ–¥—É
CB_SETTINGS_WEATHER_REMINDER = f"{SETTINGS_PREFIX}:weather_reminder_menu" # –ü–µ—Ä–µ—Ö—ñ–¥ –≤ –º–µ–Ω—é –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å
CB_WEATHER_REMINDER_TOGGLE = f"{SETTINGS_PREFIX}:wr_toggle" # –£–≤—ñ–º–∫–Ω—É—Ç–∏/–≤–∏–º–∫–Ω—É—Ç–∏
CB_WEATHER_REMINDER_SET_TIME = f"{SETTINGS_PREFIX}:wr_set_time_menu" # –ü–µ—Ä–µ—Ö—ñ–¥ –≤ –º–µ–Ω—é –≤–∏–±–æ—Ä—É —á–∞—Å—É
# –ö–æ–ª–±–µ–∫-–ø—Ä–µ—Ñ—ñ–∫—Å –¥–ª—è –∫–Ω–æ–ø–æ–∫ –≤–∏–±–æ—Ä—É –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —á–∞—Å—É
CB_WEATHER_REMINDER_TIME_SELECT_PREFIX = f"{SETTINGS_PREFIX}:wr_time_sel:" # –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, settings:wr_time_sel:07:00

# –ö–æ–ª–±–µ–∫–∏ –¥–ª—è –≤–∏–±–æ—Ä—É —Å–µ—Ä–≤—ñ—Å—É –ø–æ–≥–æ–¥–∏
CB_SET_WEATHER_SERVICE_PREFIX = f"{SETTINGS_PREFIX}:set_weather" 
CB_SET_WEATHER_OWM = f"{CB_SET_WEATHER_SERVICE_PREFIX}:{ServiceChoice.OPENWEATHERMAP}"
CB_SET_WEATHER_WAPI = f"{CB_SET_WEATHER_SERVICE_PREFIX}:{ServiceChoice.WEATHERAPI}"

# –ö–æ–ª–±–µ–∫–∏ –¥–ª—è –≤–∏–±–æ—Ä—É —Å–µ—Ä–≤—ñ—Å—É —Ç—Ä–∏–≤–æ–≥
CB_SET_ALERTS_SERVICE_PREFIX = f"{SETTINGS_PREFIX}:set_alerts"
CB_SET_ALERTS_UALARM = f"{CB_SET_ALERTS_SERVICE_PREFIX}:{ServiceChoice.UKRAINEALARM}"
CB_SET_ALERTS_AINUA = f"{CB_SET_ALERTS_SERVICE_PREFIX}:{ServiceChoice.ALERTSINUA}"

# –ö–æ–ª–±–µ–∫ –¥–ª—è –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –∑ –º–µ–Ω—é –≤–∏–±–æ—Ä—É —Å–µ—Ä–≤—ñ—Å—É/–Ω–∞–≥–∞–¥—É–≤–∞–Ω—å –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å
CB_BACK_TO_SETTINGS_MENU = f"{SETTINGS_PREFIX}:back_to_settings"


def get_main_settings_keyboard(
    current_weather_service: Optional[str],
    current_alert_service: Optional[str],
    weather_reminder_enabled: bool, # –ù–æ–≤–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä
    weather_reminder_time: Optional[dt_time] # –ù–æ–≤–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä (–≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ dt_time –∑ datetime)
) -> InlineKeyboardMarkup:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –≥–ª–∞–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –Ω–∞—Å—Ç—Ä–æ–µ–∫.
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã –∏ —Å—Ç–∞—Ç—É—Å –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å –ø—Ä–æ –ø–æ–≥–æ–¥—É.
    """
    builder = InlineKeyboardBuilder()

    weather_service_name = "–ù–µ –æ–±—Ä–∞–Ω–æ"
    if current_weather_service == ServiceChoice.OPENWEATHERMAP:
        weather_service_name = "OpenWeatherMap (–æ—Å–Ω.)"
    elif current_weather_service == ServiceChoice.WEATHERAPI:
        weather_service_name = "WeatherAPI.com (—Ä–µ–∑–µ—Ä–≤.)"
    
    alert_service_name = "–ù–µ –æ–±—Ä–∞–Ω–æ"
    if current_alert_service == ServiceChoice.UKRAINEALARM:
        alert_service_name = "UkraineAlarm (–æ—Å–Ω.)"
    elif current_alert_service == ServiceChoice.ALERTSINUA:
        alert_service_name = "Alerts.in.ua (—Ä–µ–∑–µ—Ä–≤.)"

    builder.button(
        text=f"üå¶Ô∏è –°–µ—Ä–≤—ñ—Å –ø–æ–≥–æ–¥–∏ ({weather_service_name})", 
        callback_data=CB_SETTINGS_WEATHER
    )
    builder.button(
        text=f"üö® –°–µ—Ä–≤—ñ—Å —Ç—Ä–∏–≤–æ–≥ ({alert_service_name})",
        callback_data=CB_SETTINGS_ALERTS
    )

    # –§–æ—Ä–º—É–≤–∞–Ω–Ω—è —Ç–µ–∫—Å—Ç—É –¥–ª—è –∫–Ω–æ–ø–∫–∏ –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å
    reminder_status_display = "–£–≤—ñ–º–∫." if weather_reminder_enabled else "–í–∏–º–∫."
    reminder_time_display = ""
    if weather_reminder_enabled:
        reminder_time_display = weather_reminder_time.strftime('%H:%M') if weather_reminder_time else "07:00 (–∑–∞ –∑–∞–º–æ–≤—á.)"
    else:
        reminder_time_display = "–Ω–µ –∞–∫—Ç–∏–≤–Ω–µ"
        
    builder.button(
        text=f"‚è∞ –ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è ({reminder_status_display}, {reminder_time_display})", # –°–∫–æ—Ä–æ—á–µ–Ω–æ —Ç–µ–∫—Å—Ç
        callback_data=CB_SETTINGS_WEATHER_REMINDER
    )
    
    builder.row(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data=CB_SETTINGS_BACK_TO_MAIN_MENU))
    builder.adjust(1) # –ö–æ–∂–Ω–∞ –∫–Ω–æ–ø–∫–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –Ω–∞ –Ω–æ–≤–æ–º—É —Ä—è–¥–∫—É
    return builder.as_markup()


def get_weather_service_selection_keyboard(selected_service: Optional[str]) -> InlineKeyboardMarkup:
    """ –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–µ—Ä–≤–∏—Å–∞ –ø–æ–≥–æ–¥—ã. """
    builder = InlineKeyboardBuilder()
    
    owm_text = "OpenWeatherMap (–æ—Å–Ω.)"
    wapi_text = "WeatherAPI.com (—Ä–µ–∑–µ—Ä–≤.)"

    if selected_service == ServiceChoice.OPENWEATHERMAP:
        owm_text = f"‚úÖ {owm_text}"
    elif selected_service == ServiceChoice.WEATHERAPI:
        wapi_text = f"‚úÖ {wapi_text}"

    builder.button(text=owm_text, callback_data=CB_SET_WEATHER_OWM)
    builder.button(text=wapi_text, callback_data=CB_SET_WEATHER_WAPI)
    builder.row(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –¥–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å", callback_data=CB_BACK_TO_SETTINGS_MENU))
    builder.adjust(1)
    return builder.as_markup()


def get_alert_service_selection_keyboard(selected_service: Optional[str]) -> InlineKeyboardMarkup:
    """ –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–µ—Ä–≤–∏—Å–∞ –æ–ø–æ–≤–µ—â–µ–Ω–∏–π –æ —Ç—Ä–µ–≤–æ–≥–∞—Ö. """
    builder = InlineKeyboardBuilder()

    ualarm_text = "UkraineAlarm (–æ—Å–Ω.)"
    ainua_text = "Alerts.in.ua (—Ä–µ–∑–µ—Ä–≤.)"

    if selected_service == ServiceChoice.UKRAINEALARM:
        ualarm_text = f"‚úÖ {ualarm_text}"
    elif selected_service == ServiceChoice.ALERTSINUA:
        ainua_text = f"‚úÖ {ainua_text}"

    builder.button(text=ualarm_text, callback_data=CB_SET_ALERTS_UALARM)
    builder.button(text=ainua_text, callback_data=CB_SET_ALERTS_AINUA)
    builder.row(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –¥–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å", callback_data=CB_BACK_TO_SETTINGS_MENU))
    builder.adjust(1)
    return builder.as_markup()

# --- –ù–æ–≤—ñ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏ –¥–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å –ø—Ä–æ –ø–æ–≥–æ–¥—É ---

def get_weather_reminder_settings_keyboard(
    reminder_enabled: bool,
    reminder_time: Optional[dt_time] # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ dt_time
) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å –ø—Ä–æ –ø–æ–≥–æ–¥—É:
    - –£–≤—ñ–º–∫–Ω—É—Ç–∏/–í–∏–º–∫–Ω—É—Ç–∏
    - –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ —á–∞—Å
    - –ù–∞–∑–∞–¥
    """
    builder = InlineKeyboardBuilder()
    
    toggle_text = "üü¢ –í–∏–º–∫–Ω—É—Ç–∏ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è" if reminder_enabled else "üî¥ –£–≤—ñ–º–∫–Ω—É—Ç–∏ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è"
    builder.button(text=toggle_text, callback_data=CB_WEATHER_REMINDER_TOGGLE)

    current_time_display = "–Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
    if reminder_enabled:
        current_time_display = reminder_time.strftime('%H:%M') if reminder_time else "07:00 (–∑–∞ –∑–∞–º–æ–≤—á.)"
    
    set_time_button_text = f"üïí –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ —á–∞—Å (–∑–∞—Ä–∞–∑: {current_time_display})"
    if not reminder_enabled:
        set_time_button_text = "üïí –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ —á–∞—Å (–Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –≤–∏–º–∫–Ω–µ–Ω—ñ)"

    builder.button(
        text=set_time_button_text, 
        callback_data=CB_WEATHER_REMINDER_SET_TIME
    )
    
    builder.row(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –¥–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å", callback_data=CB_BACK_TO_SETTINGS_MENU))
    builder.adjust(1) # –ö–æ–∂–Ω–∞ –∫–Ω–æ–ø–∫–∞ –Ω–∞ –Ω–æ–≤–æ–º—É —Ä—è–¥–∫—É
    return builder.as_markup()

def get_weather_reminder_time_selection_keyboard(
    current_selected_time_obj: Optional[dt_time] # –ü—Ä–∏–π–º–∞—î –æ–±'—î–∫—Ç time –∞–±–æ None
) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è –≤–∏–±–æ—Ä—É —á–∞—Å—É –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è.
    –ü–æ–∫–∞–∑—É—î –≥–∞–ª–æ—á–∫—É –±—ñ–ª—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ –æ–±—Ä–∞–Ω–æ–≥–æ —á–∞—Å—É.
    """
    builder = InlineKeyboardBuilder()
    # –ü—Ä–æ–ø–æ–Ω–æ–≤–∞–Ω—ñ –≤–∞—Ä—ñ–∞–Ω—Ç–∏ —á–∞—Å—É (–º–æ–∂–Ω–∞ –≤–∏–Ω–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∏)
    suggested_times_str = ["06:00", "07:00", "08:00", "09:00", "12:00", "18:00", "20:00", "21:00"]
    
    current_selected_time_str = current_selected_time_obj.strftime('%H:%M') if current_selected_time_obj else None

    buttons_in_row = []
    for time_str_option in suggested_times_str:
        button_text = time_str_option
        if time_str_option == current_selected_time_str:
            button_text = f"‚úÖ {time_str_option}"
        
        buttons_in_row.append(InlineKeyboardButton(
            text=button_text,
            callback_data=f"{CB_WEATHER_REMINDER_TIME_SELECT_PREFIX}{time_str_option}"
        ))
        
        if len(buttons_in_row) == 3: # –†–æ–∑–º—ñ—â—É—î–º–æ –ø–æ 3 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥
            builder.row(*buttons_in_row)
            buttons_in_row = []
            
    if buttons_in_row: # –î–æ–¥–∞—î–º–æ –∑–∞–ª–∏—à–æ–∫ –∫–Ω–æ–ø–æ–∫, —è–∫—â–æ –≤–æ–Ω–∏ —î
        builder.row(*buttons_in_row)
        
    # –ú–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –∫–Ω–æ–ø–∫—É –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –≤–≤–µ–¥–µ–Ω–Ω—è —á–∞—Å—É –≤ –º–∞–π–±—É—Ç–Ω—å–æ–º—É
    # builder.row(InlineKeyboardButton(text="üìù –í–≤–µ—Å—Ç–∏ —Å–≤—ñ–π —á–∞—Å", callback_data="wr_custom_time_input"))
    
    builder.row(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –¥–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å", callback_data=CB_SETTINGS_WEATHER_REMINDER))
    return builder.as_markup()


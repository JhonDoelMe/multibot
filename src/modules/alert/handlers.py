# src/modules/alert/handlers.py

import logging
from typing import Union
from aiogram import Bot, Router, F
from aiogram.types import Message, CallbackQuery # InlineKeyboardMarkup –Ω–µ –ø–æ—Ç—Ä—ñ–±–µ–Ω

# sqlalchemy.ext.asyncio.AsyncSession –ø–æ–∫–∏ –Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è
# from src.handlers.utils import show_main_menu_message # –ù–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è —Ç—É—Ç

from .service import get_active_alerts, format_alerts_message # selected_region_name –ø–µ—Ä–µ–¥–∞—î—Ç—å—Å—è –∑ FSM, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ
from .keyboard import get_alert_keyboard, CALLBACK_ALERT_REFRESH

logger = logging.getLogger(__name__)
router = Router(name="alert-module")

async def _show_alerts(bot: Bot, target: Union[Message, CallbackQuery], selected_region_name: str = ""):
    """
    –ó–∞–ø–∏—Ç—É—î —Ç–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î —Å—Ç–∞—Ç—É—Å —Ç—Ä–∏–≤–æ–≥.
    selected_region_name: –û–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ, –¥–ª—è —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —è–∫—â–æ –∑–∞–ø–∏—Ç –±—É–≤ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ä–µ–≥—ñ–æ–Ω—É.
                          –°–µ—Ä–≤—ñ—Å get_active_alerts —Å–∞–º –æ–±—Ä–æ–±–ª—è—î region_id (—è–∫—â–æ –≤—ñ–Ω —î).
    """
    user_id = target.from_user.id
    message_to_edit_or_answer = target.message if isinstance(target, CallbackQuery) else target
    status_message = None
    answered_callback = False

    if isinstance(target, CallbackQuery):
        try:
            await target.answer()
            answered_callback = True
        except Exception as e:
            logger.warning(f"Could not answer callback immediately in _show_alerts for user {user_id}: {e}")

    try:
        loading_text = "‚è≥ –û—Ç—Ä–∏–º—É—é –∞–∫—Ç—É–∞–ª—å–Ω–∏–π —Å—Ç–∞—Ç—É—Å —Ç—Ä–∏–≤–æ–≥..."
        if selected_region_name: # –Ø–∫—â–æ —î –Ω–∞–∑–≤–∞ —Ä–µ–≥—ñ–æ–Ω—É, –º–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ —ó—ó –¥–æ —Ç–µ–∫—Å—Ç—É –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            loading_text = f"‚è≥ –û—Ç—Ä–∏–º—É—é —Å—Ç–∞—Ç—É—Å —Ç—Ä–∏–≤–æ–≥ –¥–ª—è —Ä–µ–≥—ñ–æ–Ω—É <b>{selected_region_name}</b>..."
        
        if isinstance(target, CallbackQuery):
            status_message = await message_to_edit_or_answer.edit_text(loading_text)
        else: # Message
            status_message = await message_to_edit_or_answer.answer(loading_text)
    except Exception as e:
        logger.warning(f"Could not send/edit 'loading' status message for alerts, user {user_id}: {e}")
        # –Ø–∫—â–æ –Ω–µ –≤–¥–∞–ª–æ—Å—è –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏/–≤—ñ–¥—Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏, status_message –∑–∞–ª–∏—à–∏—Ç—å—Å—è None

    # –£ get_active_alerts –ø–µ—Ä–µ–¥–∞—î–º–æ –ø–æ—Ä–æ–∂–Ω—ñ–π region_id, —è–∫—â–æ selected_region_name –Ω–µ –≤–∫–∞–∑–∞–Ω–æ.
    # –Ø–∫—â–æ –≤ –º–∞–π–±—É—Ç–Ω—å–æ–º—É –±—É–¥–µ –ª–æ–≥—ñ–∫–∞ –≤–∏–±–æ—Ä—É —Ä–µ–≥—ñ–æ–Ω—É, —Ç—É—Ç —Ç—Ä–µ–±–∞ –±—É–¥–µ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–π ID.
    # –ü–æ–∫–∏ —â–æ, –¥–ª—è –∑–∞–≥–∞–ª—å–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å—É, region_id –∑–∞–ª–∏—à–∞—î—Ç—å—Å—è –ø–æ—Ä–æ–∂–Ω—ñ–º.
    # –Ø–∫—â–æ selected_region_name –ø–µ—Ä–µ–¥–∞–Ω–æ, —Ü–µ –ª–∏—à–µ –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.
    # –ü—Ä–∏–ø—É—Å–∫–∞—î–º–æ, —â–æ —è–∫—â–æ selected_region_name —î, —Ç–æ get_active_alerts –±—É–≤ –≤–∏–∫–ª–∏–∫–∞–Ω–∏–π –∑ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–º region_id —Ä–∞–Ω—ñ—à–µ,
    # –∞–±–æ selected_region_name –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –ª–∏—à–µ –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç—É –≤ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—ñ.
    # –î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç–∏, –ø–æ–∫–∏ —â–æ get_active_alerts –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –±–µ–∑ region_id (–¥–ª—è –≤—Å—ñ—î—ó –£–∫—Ä–∞—ó–Ω–∏).
    # –Ø–∫—â–æ —É –≤–∞—Å —î –ª–æ–≥—ñ–∫–∞ –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è region_id –∑ selected_region_name, —ó—ó —Ç—Ä–µ–±–∞ –¥–æ–¥–∞—Ç–∏.
    # –ù–∞—Ä–∞–∑—ñ, `selected_region_name` –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è —Ç—ñ–ª—å–∫–∏ –¥–ª—è —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è.
    
    api_response = await get_active_alerts(bot) # –ó–∞–ø–∏—Ç –ø–æ –≤—Å—ñ–π –£–∫—Ä–∞—ó–Ω—ñ
    
    # –ü–µ—Ä–µ–¥–∞—î–º–æ selected_region_name —É —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–ª—å–Ω–∏–∫, —è–∫—â–æ –≤—ñ–Ω —î, –¥–ª—è –∫–æ—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞
    message_text = format_alerts_message(api_response, selected_region_name=selected_region_name if selected_region_name else None)
    reply_markup = get_alert_keyboard()

    target_message_for_result = status_message if status_message else message_to_edit_or_answer

    try:
        if status_message:
            await target_message_for_result.edit_text(message_text, reply_markup=reply_markup)
        else:
            await message_to_edit_or_answer.answer(message_text, reply_markup=reply_markup) # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –≤–∏—Ö—ñ–¥–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        logger.info(f"Sent alert status (region: '{selected_region_name or 'all'}') to user {user_id}.")
    except Exception as e:
        logger.error(f"Failed to send/edit final alert status message to user {user_id}: {e}")
        try:
            if not status_message: # –Ø–∫—â–æ –ø–æ—á–∞—Ç–∫–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–µ –±—É–ª–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ
                await message_to_edit_or_answer.answer("üò• –í–∏–±–∞—á—Ç–µ, —Å—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—ñ —Å—Ç–∞—Ç—É—Å—É —Ç—Ä–∏–≤–æ–≥.", reply_markup=reply_markup)
        except Exception as e2:
            logger.error(f"Truly unable to communicate alert status error to user {user_id}: {e2}")
    finally:
        if isinstance(target, CallbackQuery) and not answered_callback:
            try:
                await target.answer()
            except Exception as e:
                logger.warning(f"Final attempt to answer alert callback for user {user_id} also failed: {e}")


async def alert_entry_point(target: Union[Message, CallbackQuery], bot: Bot):
    user_id = target.from_user.id
    logger.info(f"User {user_id} requested alert status (main entry point).")
    # –î–ª—è —Ç–æ—á–∫–∏ –≤—Ö–æ–¥—É –º–∏ –Ω–µ –º–∞—î–º–æ –æ–±—Ä–∞–Ω–æ–≥–æ —Ä–µ–≥—ñ–æ–Ω—É, —Ç–æ–º—É selected_region_name –ø–æ—Ä–æ–∂–Ω—ñ–π
    await _show_alerts(bot, target, selected_region_name="")

@router.callback_query(F.data == CALLBACK_ALERT_REFRESH)
async def handle_alert_refresh(callback: CallbackQuery, bot: Bot):
    user_id = callback.from_user.id
    logger.info(f"User {user_id} requested alert status refresh.")
    # –ü—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ —Ç–∞–∫–æ–∂ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∑–∞–≥–∞–ª—å–Ω–∏–π —Å—Ç–∞—Ç—É—Å –ø–æ –£–∫—Ä–∞—ó–Ω—ñ,
    # —è–∫—â–æ –Ω–µ–º–∞—î –º–µ—Ö–∞–Ω—ñ–∑–º—É –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è/–ø–µ—Ä–µ–¥–∞—á—ñ –æ–±—Ä–∞–Ω–æ–≥–æ —Ä–µ–≥—ñ–æ–Ω—É.
    # –Ø–∫—â–æ –≤–∏ –¥–æ–¥–∞—Å—Ç–µ FSM –¥–ª—è –≤–∏–±–æ—Ä—É —Ä–µ–≥—ñ–æ–Ω—É, —Ç—É—Ç —Ç—Ä–µ–±–∞ –±—É–¥–µ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ region_name –∑—ñ —Å—Ç–∞–Ω—É.
    await _show_alerts(bot, callback, selected_region_name="")
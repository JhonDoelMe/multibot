# src/modules/currency/handlers.py

import logging
from typing import Union, Optional # –î–æ–±–∞–≤–∏–ª–∏ Optional
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup # –î–æ–±–∞–≤–∏–ª–∏ InlineKeyboardMarkup
from sqlalchemy.ext.asyncio import AsyncSession

# from src.handlers.common import show_main_menu_message # –£–±—Ä–∞–ª–∏ –∏–º–ø–æ—Ä—Ç
from .service import get_pb_exchange_rates, format_rates_message
from .keyboard import (
    get_currency_type_keyboard, # –£–±—Ä–∞–ª–∏ get_currency_back_keyboard
    CALLBACK_CURRENCY_CASH, CALLBACK_CURRENCY_NONCASH # –£–±—Ä–∞–ª–∏ CALLBACK_CURRENCY_BACK
)

logger = logging.getLogger(__name__)
router = Router(name="currency-module")

async def currency_entry_point(target: Union[Message, CallbackQuery]):
    user_id = target.from_user.id
    logger.info(f"User {user_id} requested currency rates.")
    text = "üè¶ –û–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –∫—É—Ä—Å—É:"
    reply_markup = get_currency_type_keyboard() # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞
    if isinstance(target, CallbackQuery):
        await target.answer()
        # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –¥–æ–±–∞–≤–ª—è—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞
        await target.message.edit_text(text, reply_markup=reply_markup)
    else:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –≤—ã–±–æ—Ä–∞
        await target.answer(text, reply_markup=reply_markup)


async def _show_rates(callback: CallbackQuery, cash: bool):
    rate_type_name = "–ì–æ—Ç—ñ–≤–∫–æ–≤–∏–π –∫—É—Ä—Å –ü—Ä–∏–≤–∞—Ç–ë–∞–Ω–∫—É" if cash else "–ë–µ–∑–≥–æ—Ç—ñ–≤–∫–æ–≤–∏–π –∫—É—Ä—Å –ü—Ä–∏–≤–∞—Ç–ë–∞–Ω–∫—É"
    user_id = callback.from_user.id
    # –°—Ä–∞–∑—É –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ –∫–æ–ª–±—ç–∫ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∫—É—Ä—Å–∞
    await callback.answer()
    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ "–ó–∞–≥—Ä—É–∑–∫–∞..." –ë–ï–ó –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    try:
        await callback.message.edit_text(f"‚è≥ –û—Ç—Ä–∏–º—É—é {rate_type_name.lower()}...")
    except Exception as e:
        logger.warning(f"Could not edit message before showing rates: {e}")

    rates = await get_pb_exchange_rates(cash=cash)
    # reply_markup = get_currency_back_keyboard() # <<< –£–ë–ò–†–ê–ï–ú –∫–Ω–æ–ø–∫—É –ù–∞–∑–∞–¥
    reply_markup = None # <<< –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º None

    if rates:
        message_text = format_rates_message(rates, rate_type_name)
        logger.info(f"Sent {rate_type_name} rates to user {user_id}.")
    else:
        message_text = f"üòî –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ {rate_type_name.lower()}. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ."
        logger.warning(f"Failed to get {rate_type_name} rates for user {user_id}.")
    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø–æ–∫–∞–∑—ã–≤–∞—è –∫—É—Ä—Å—ã –ë–ï–ó –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    try:
         await callback.message.edit_text(message_text, reply_markup=reply_markup)
    except Exception as e:
         logger.error(f"Failed to edit message with rates: {e}")
         # –ï—Å–ª–∏ –Ω–µ –≤—ã—à–ª–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å, –Ω–æ–≤–æ–µ —Ç–æ–∂–µ –Ω–µ —à–ª–µ–º, —Ç.–∫. –ø–æ–∫–∞–∑–∞—Ç—å –Ω–µ—á–µ–≥–æ

@router.callback_query(F.data == CALLBACK_CURRENCY_CASH)
async def handle_cash_rates_request(callback: CallbackQuery):
    await _show_rates(callback, cash=True)

@router.callback_query(F.data == CALLBACK_CURRENCY_NONCASH)
async def handle_noncash_rates_request(callback: CallbackQuery):
    await _show_rates(callback, cash=False)

# –£–î–ê–õ–Ø–ï–ú –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ handle_currency_back
# @router.callback_query(F.data == CALLBACK_CURRENCY_BACK) ...
# src/modules/currency/handlers.py (–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ IndentationError)

import logging
from typing import Union, Optional
from aiogram import Bot, Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup
from sqlalchemy.ext.asyncio import AsyncSession # –ü–æ–∫–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∑–¥–µ—Å—å

# –ò–º–ø–æ—Ä—Ç—ã —Å–µ—Ä–≤–∏—Å–∞ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä
from .service import get_pb_exchange_rates, format_rates_message
from .keyboard import (
    get_currency_type_keyboard,
    CALLBACK_CURRENCY_CASH, CALLBACK_CURRENCY_NONCASH
    # –£–±—Ä–∞–ª–∏ –∏–º–ø–æ—Ä—Ç get_currency_back_keyboard –∏ CALLBACK_CURRENCY_BACK
)
# –ò–º–ø–æ—Ä—Ç –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
from src.handlers.utils import show_main_menu_message # –ò—Å–ø–æ–ª—å–∑—É–µ–º utils

logger = logging.getLogger(__name__)
router = Router(name="currency-module")

# --- –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ (–ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –æ—Ç—Å—Ç—É–ø—ã –≤ try/except/else) ---
async def currency_entry_point(target: Union[Message, CallbackQuery], bot: Bot):
    """ –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –º–æ–¥—É–ª—å –≤–∞–ª—é—Ç. –ü—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤—ã–±—Ä–∞—Ç—å —Ç–∏–ø –∫—É—Ä—Å–∞. """
    user_id = target.from_user.id
    logger.info(f"User {user_id} requested currency rates.")
    text = "üè¶ –û–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –∫—É—Ä—Å—É:"
    reply_markup = get_currency_type_keyboard() # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞
    message_to_edit_or_answer = target.message if isinstance(target, CallbackQuery) else target

    # –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
    if isinstance(target, CallbackQuery):
        try: await target.answer() # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ –∫–æ–ª–±—ç–∫
        except Exception as e: logger.warning(f"Could not answer callback in currency_entry_point: {e}")
        # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
        try:
            await message_to_edit_or_answer.edit_text(text, reply_markup=reply_markup)
        except Exception as e:
            # –ï—Å–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å, –ø—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ
            logger.error(f"Error editing message in currency_entry_point: {e}")
            try:
                await message_to_edit_or_answer.answer(text, reply_markup=reply_markup)
            except Exception as e2:
                 logger.error(f"Could not send new message either in currency_entry_point: {e2}")
    else:
        # –ï—Å–ª–∏ —ç—Ç–æ –±—ã–ª–æ –Ω–µ CallbackQuery (–∞ Message), –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        try: await target.answer(text, reply_markup=reply_markup)
        except Exception as e: logger.error(f"Error sending message in currency_entry_point: {e}")


async def _show_rates(bot: Bot, callback: CallbackQuery, cash: bool):
    """ –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤. """
    rate_type_name = "–ì–æ—Ç—ñ–≤–∫–æ–≤–∏–π –∫—É—Ä—Å –ü—Ä–∏–≤–∞—Ç–ë–∞–Ω–∫—É" if cash else "–ë–µ–∑–≥–æ—Ç—ñ–≤–∫–æ–≤–∏–π –∫—É—Ä—Å –ü—Ä–∏–≤–∞—Ç–ë–∞–Ω–∫—É"
    user_id = callback.from_user.id
    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ –∫–æ–ª–±—ç–∫ —Å—Ä–∞–∑—É
    try: await callback.answer()
    except Exception as e: logger.warning(f"Could not answer callback in _show_rates: {e}")


    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ "–ó–∞–≥—Ä—É–∑–∫–∞..." –ë–ï–ó –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    status_message = None
    # –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    try:
        status_message = await callback.message.edit_text(f"‚è≥ –û—Ç—Ä–∏–º—É—é {rate_type_name.lower()}...")
    except Exception as e:
        logger.warning(f"Could not edit message before showing rates: {e}")
        status_message = callback.message # Fallback

    rates = await get_pb_exchange_rates(bot, cash=cash) # –ü–µ—Ä–µ–¥–∞–µ–º bot
    reply_markup = None # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ—Å–ª–µ –ø–æ–∫–∞–∑–∞ –∫—É—Ä—Å–∞ –Ω–µ –Ω—É–∂–Ω–∞

    if rates is not None: # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–µ None (—Ç.–µ. –Ω–µ –±—ã–ª–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–∏ API)
        message_text = format_rates_message(rates, rate_type_name)
        if "–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏" not in message_text: # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—à–∏–±–∫—É –≤–Ω—É—Ç—Ä–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤—â–∏–∫–∞
             logger.info(f"Sent {rate_type_name} rates to user {user_id}.")
        else:
             logger.warning(f"Formatted message indicated error for {rate_type_name} rates for user {user_id}.")
    else:
        message_text = f"üò• –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ {rate_type_name.lower()}. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ."
        logger.warning(f"Failed to get {rate_type_name} rates for user {user_id} (API service returned None).")

    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø–æ–∫–∞–∑—ã–≤–∞—è –∫—É—Ä—Å—ã –ë–ï–ó –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    # –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    final_target_message = status_message if status_message else callback.message # Ensure final_target_message is set
    try:
         await final_target_message.edit_text(message_text, reply_markup=reply_markup)
    except Exception as e:
         logger.error(f"Failed to edit message with rates: {e}")
         try: # Fallback to answer if edit fails
             await callback.message.answer(message_text, reply_markup=reply_markup)
         except Exception as e2:
              logger.error(f"Failed even to send new message with rates: {e2}")


@router.callback_query(F.data == CALLBACK_CURRENCY_CASH)
async def handle_cash_rates_request(callback: CallbackQuery, bot: Bot):
    await _show_rates(bot, callback, cash=True)

@router.callback_query(F.data == CALLBACK_CURRENCY_NONCASH)
async def handle_noncash_rates_request(callback: CallbackQuery, bot: Bot):
    await _show_rates(bot, callback, cash=False)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ù–∞–∑–∞–¥ –∑–¥–µ—Å—å –Ω–µ –Ω—É–∂–µ–Ω, —Ç–∞–∫ –∫–∞–∫ –µ–µ –Ω–µ—Ç –≤ –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞—Ö —ç—Ç–æ–≥–æ –º–æ–¥—É–ª—è
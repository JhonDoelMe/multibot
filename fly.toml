# fly.toml

# Уникальное имя вашего приложения на Fly.io (придумайте свое, например "my-telegram-bot-ua")
# Вы можете задать его при первом запуске `fly launch` или указать здесь.
app = "ваше-уникальное-имя-приложения"

# Регион, где будет развернуто приложение (например, fra - Франкфурт, ams - Амстердам)
primary_region = "fra"

# Секция настроек сборки
[build]
  # Указываем, что нужно использовать Dockerfile из текущей директории
  dockerfile = "Dockerfile"
  # Игнорируемые файлы при сборке (аналогично .dockerignore, если бы он был)
  # ignorefile = ".dockerignore"

# Секция настроек веб-сервиса (для приема вебхуков от Telegram)
[http_service]
  # Внутренний порт, на котором будет слушать наше приложение внутри контейнера
  internal_port = 8080
  # Fly.io автоматически обработает HTTPS и перенаправит на наш HTTP порт
  force_https = true
  # Минимальное/максимальное количество запущенных экземпляров приложения
  auto_stop_machines = true # Автоматически останавливать, если нет трафика (экономия)
  auto_start_machines = true # Автоматически запускать при первом запросе
  min_machines_running = 0 # Можно установить 1 для постоянной работы
  # initial_count = 1 # Можете указать начальное кол-во машин

  # Проверка состояния приложения (health check)
  # Fly будет проверять, отвечает ли приложение на указанном порту
  [[http_service.checks]]
    port = 8080
    type = "tcp" # Простая проверка TCP-соединения
    interval = "15s"
    timeout = "2s"
    grace_period = "5s" # Время на запуск приложения перед первой проверкой
    # Для более надежной проверки можно использовать HTTP:
    # type = "http"
    # path = "/health" # Нужно будет добавить обработчик этого пути в боте
    # method = "GET"
    # interval = "15s"
    # timeout = "2s"

# Секция описывает процесс, который будет запущен
# По умолчанию Fly запускает процесс с именем "app"
[processes]
  app = "" # Команда запуска берется из CMD в Dockerfile

# Если вам нужно монтировать постоянное хранилище (volume)
# [mounts]
#   source="bot_data" # Имя volume (будет создано Fly)
#   destination="/data" # Куда монтировать внутри контейнера